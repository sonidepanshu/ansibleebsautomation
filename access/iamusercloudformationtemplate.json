AWSTemplateFormatVersion: "2010-09-09"
Description: >
  Creates an IAM programmatic user for Ansible  with permissions to list EC2 instances across all regions,
  create and publish to an SNS topic, and stores the credentials in Secrets Manager.

Parameters:
  SubscriptionEmail:
    Type: String
    Description: "Enter the email address to subscribe to the SNS topic."

Resources:
  EBSSNSTopic:
    Type: AWS::SNS::Topic
    Properties:
      TopicName: EBSalerts
      DisplayName: "EBS Disk Alerts Topic"

  EBSSNSTopicSubscription:
    Type: AWS::SNS::Subscription
    Properties:
      Protocol: email
      Endpoint: !Ref SubscriptionEmail
      TopicArn: !Ref EBSSNSTopic

  AnsiblePolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: AnsibleEC2ReadSNSPublishPolicy
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Sid: EC2ReadOnly
            Effect: Allow
            Action:
              - ec2:DescribeInstances
              - ec2:DescribeRegions
              - ec2:DescribeTags
              - ec2:DescribeVolumes
              - ec2:DescribeSnapshots
            Resource: "*"

          - Sid: SNSAccess
            Effect: Allow
            Action:
              - sns:Publish
              - sns:ListTopics
              - sns:GetTopicAttributes
            Resource: !Ref EBSSNSTopic

      Users:
        - !Ref AnsibleUser

  AnsibleUser:
    Type: AWS::IAM::User
    Properties:
      UserName: AnsibleAutomationUser
      Policies: []
      Tags:
        - Key: Purpose
          Value: Ansible Dynamic Inventory
        - Key: ManagedBy
          Value: CloudFormation

  AnsibleUserAccessKey:
    Type: AWS::IAM::AccessKey
    Properties:
      UserName: !Ref AnsibleUser

  AnsibleCredentialsSecret:
    Type: AWS::SecretsManager::Secret
    Properties:
      Name: AnsibleAutomationUserCredentials
      Description: "Stores IAM programmatic access keys for Ansible automation."
      SecretString: !Sub |
        {
          "aws_access_key": "${AnsibleUserAccessKey}",
          "aws_secret_key": "${AnsibleUserAccessKey.SecretAccessKey}"
        }

Outputs:
  IAMUserName:
    Description: "IAM User created for Ansible automation"
    Value: !Ref AnsibleUser

  AccessKeyID:
    Description: "Access Key ID for Ansible IAM User"
    Value: !Ref AnsibleUserAccessKey

  SecretManagerARN:
    Description: "ARN of the secret storing IAM credentials"
    Value: !Ref AnsibleCredentialsSecret

  SNSTopicARN:
    Description: "ARN of the SNS Topic created for EBS alerts"
    Value: !Ref EBSSNSTopic

  SNSSubscription:
    Description: "Email subscription created for the SNS topic. Confirm the email to start receiving alerts."
    Value: !Ref EBSSNSTopicSubscription
